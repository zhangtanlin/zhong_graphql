# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CityCreateInput {
  code: String!
  country_id: Int
  name: String!
}

type CityEntity {
  code: String!
  country: CountryEntity!
  id: Int
  name: String!
}

input CountryCreateInput {
  base_code: String!
  detail_code: String!
  is_sovereignty: Int
  name: String!
  number_code: String!
}

type CountryEntity {
  base_code: String!
  cityList: [CityEntity!]
  detail_code: String!
  id: Int
  is_sovereignty: Int
  name: String!
  number_code: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  cityCreate(input: CityCreateInput!): CityEntity!
  countryCreate(input: CountryCreateInput!): CountryEntity!
  createPosts(postsInputDto: PostsInputDto!): PostsDto!
  resourceCreate(input: ResourceCreateInput!): ResourceEntity!
  roleCreate(role: RoleCreateInput!): RoleEntity!
  userCreate(input: UserCreateInput!): UserEntity!
  userUpdate(input: UserUpdateInput!): UserEntity!
}

type PostsDto {
  account: String!
  id: ID!
  password: String!
}

input PostsInputDto {
  account: String!
  password: String!
}

type Query {
  CityFindAll: [CityEntity!]!
  cityFindOneById(id: Int!): CityEntity!
  countryFindAll: [CountryEntity!]!
  countryFindOneById(id: Int!): CountryEntity!
  login(input: UserLoginInput!): UserLoginResult!
  posts: String!
  postsFindAll: [PostsDto!]!
  postsFindOneById(id: Float!): PostsDto!
  resourceFindAll: [ResourceEntity!]!
  resourceFindOneById(id: Int!): ResourceEntity!
  roleFindAll: [RoleEntity!]!
  roleFindOneById(id: Int!): RoleEntity!
  userFindAll: [UserEntity!]!
  userFindByPaging(page: Int!, size: Int = 10): [UserEntity!]!
  userFindOneById(id: Int!): UserEntity!
}

input ResourceCreateInput {
  alias: String!
  description: String!
  href: String!
  icon: String!
  isNavigation: Float!
  isShow: Float!
  name: String!
  permission: String!
  pid: Float!
  target: String!
  type: Float!
}

type ResourceEntity {
  alias: String
  description: String
  href: String
  icon: String
  id: Int!
  isNavigation: Int
  isShow: Int
  name: String
  permission: String
  pid: Int
  roleList: [RoleEntity!]
  target: String
  type: Int
}

input RoleCreateInput {
  alias: String
  defaultFlag: Int
  description: String
  name: String!
  roleType: Int
}

type RoleEntity {
  alias: String
  defaultFlag: Int
  description: String
  id: Int
  name: String!
  resourceList: [ResourceEntity!]
  resources: String
  roleType: Int
  userList: [UserEntity!]
}

input UserCreateInput {
  account: String!
  age: Int
  area_id: String
  avatar: String
  department: String
  email: String
  firm: String
  name: String
  password: String!
  phone: String
  role_id_list: [Int!]
  status: Int
}

type UserEntity {
  account: String!
  activate_time: DateTime
  age: Int
  area_id: String
  avatar: String
  create_time: DateTime
  department: String
  disabled_time: DateTime
  email: String
  firm: String
  id: Int
  is_disabled: Int
  is_first_login: Int
  is_locked: Int
  last_login_ip: String
  last_login_time: DateTime
  last_update_password_time: DateTime
  locked_time: DateTime
  name: String
  password: String!
  phone: String
  roleList: [RoleEntity!]
  status: Int
}

input UserLoginInput {
  account: String
  password: String
}

type UserLoginResult {
  token: String!
  user: String
}

input UserUpdateInput {
  account: String
  age: Int
  area_id: String
  avatar: String
  department: String
  email: String
  firm: String
  id: Int!
  name: String
  password: String
  phone: String
  status: Int
}